{
  "hash": "878848f4515fd1ecab97f2369052d438",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Distribuição Normal e Inferência Bayesiana\"\nsubtitle: \"Modelando Dados Contínuos no PyMC - distribições a priori\"\ndescription: \"Introdução à modelagem Bayesiana de dados contínuos, incluindo escolha de priores e checagens preditivas.\"\nformat: html\n---\n\n\n\n\n---\n\nNesta semana, exploraremos a inferência bayesiana, com foco na modelagem de dados contínuos por meio da distribuição normal. Nosso objetivo será desenvolver a intuição sobre como escolher distribuições a priori e como o PyMC nos auxilia a visualizar as consequências dessas escolhas sobre a distribuição preditiva a priori da variável de interesse. Para isso, utilizaremos um exemplo baseado na distribuição de altura em adultos.\n\n::: {.callout-important title=\"Objetivos de Aprendizagem\"}\n\nAo final desta aula, você deverá ser capaz de:\n\n* Apresentar e compreender a distribuição normal de forma intuitiva.\n* Simular dados a partir de distribuições normais utilizando `scipy`.\n* Utilizar seu conhecimento subjetivo para propor e visualizar distribuições *a priori* para os parâmetros de um modelo normal (por exemplo, altura de adultos).\n* Visualizar a distribuição *preditiva a priori* da variável resposta com o PyMC.\n\n:::\n\n::: {#517187b0 .cell execution_count=1}\n``` {.python .cell-code}\n# Importando bibliotecas necessárias\nimport pymc as pm\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\n\n# Configurações para plots\nplt.style.use('seaborn-v0_8-darkgrid')\nplt.rcParams['figure.figsize'] = (9, 6)\n```\n:::\n\n\n## Explorando a Distribuição Normal\n\nA Distribuição Normal, frequentemente chamada de **curva de sino** ou **curva Gaussiana**, é central em estatística. Ela é caracterizada por dois parâmetros: a média ($\\mu$) e o desvio padrão ($\\sigma$). A média determina o centro da distribuição, enquanto o desvio padrão determina sua dispersão ou largura. Muitos fenômenos naturais podem ser adequadamente descritos por essa distribuição.\n\n**A ideia intuitiva:** Pense na altura de adultos. Há um valor central (a média) em torno do qual a maioria das alturas se agrupa. Há também uma variação: algumas pessoas são mais altas, outras mais baixas. O desvio padrão nos diz o quão espalhadas essas alturas tendem a ser em relação à média.\n\n### Curva de densidade de probabilidade\n\nGerando a Distribuição de Densidade Normal para diferentes valores de $\\mu$ e $\\sigma$.\n\n::: {#e44dfcf7 .cell execution_count=2}\n``` {.python .cell-code}\n# Parâmetros da distribuição\nmu_1 = 20\nsigma_1 = 3\n\nmu_2 = 20\nsigma_2 = 6\n\nmu_3 = 30\nsigma_3 = 5\n\n# Limites gráficos\nx_min = np.min(np.array([mu_1, mu_2, mu_3]) - 4*np.array([sigma_1, sigma_2, sigma_3]))\nx_max = np.max(np.array([mu_1, mu_2, mu_3]) + 4*np.array([sigma_1, sigma_2, sigma_3]))\nx = np.linspace(x_min, x_max, 1000) # Faixa de alturas para plotar\n\npdf_1 = stats.norm.pdf(x, loc=mu_1, scale=sigma_1)\npdf_2 = stats.norm.pdf(x, loc=mu_2, scale=sigma_2)\npdf_3 = stats.norm.pdf(x, loc=mu_3, scale=sigma_3)\n```\n:::\n\n\nVisualizando as distribuições de densidade de probabilidade\n\n::: {#cell-fig-normal-densities .cell execution_count=3}\n``` {.python .cell-code}\nplt.plot(x, pdf_1, label=f'$\\mu={mu_1}, \\sigma={sigma_1}$', color='b', lw=2)\nplt.plot(x, pdf_2, label=f'$\\mu={mu_2}, \\sigma={sigma_2}$', color='r', lw=2)\nplt.plot(x, pdf_3, label=f'$\\mu={mu_3}, \\sigma={sigma_3}$', color='g', lw=2)\nplt.xlabel('X', fontsize=12)\nplt.ylabel('Densidade de Probabilidade', fontsize=12)\nplt.legend()\nplt.grid(True, linestyle='-', alpha=0.7)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Desidades da distribuição normal para diferentes valores de μ e σ.](modelo_normal_bayesiano_priori_files/figure-html/fig-normal-densities-output-1.png){#fig-normal-densities width=740 height=501}\n:::\n:::\n\n\n### Amostrando valores de distribuição normal {#sec-amostra-normal}\n\nNa @fig-normal-densities vemos as curvas teóricas de densidade da distribuiçao normal. Podemos também gerar *amostras* valores ao acaso destas distribuições para verificar como estas amostras se parecem. Isso simula o processo de **sortear** alturas de uma população que segue essa distribuição.\n\n::: {#5476040c .cell execution_count=4}\n``` {.python .cell-code}\nmu = 20\nsigma = 4\nnum_amostras = 60\n```\n:::\n\n\nVerificando o histograma dos valores sorteados.\n\n::: {#cell-fig-normal-sampling .cell execution_count=5}\n``` {.python .cell-code}\namostras_y = stats.norm.rvs(loc=mu, scale=sigma, size=num_amostras)\nx_dens = np.linspace(mu-4*sigma, mu+4*sigma, 500)\n\nplt.hist(amostras_y, bins=30, density=True, alpha=0.8, color='lightblue', label='Amostras Geradas')\nsns.kdeplot(amostras_y, color='blue', linewidth=2, label='Densidade Empírica')\nplt.plot(x_dens, stats.norm.pdf(x_dens, loc=mu, scale=sigma), color='red', linewidth=2.5, label='Densidade Teórica')\nplt.xlabel('X', fontsize=12)\nplt.ylabel('Densidade / Frequência Normalizada', fontsize=12)\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Histograma de amostras geradas a partir de uma distribuição normal com média $\\mu$ e desvio padrão $\\sigma$, acompanhado da densidade empírica estimada por kernel e da densidade teórica correspondente.](modelo_normal_bayesiano_priori_files/figure-html/fig-normal-sampling-output-1.png){#fig-normal-sampling width=740 height=501}\n:::\n:::\n\n\n::: {.callout-tip title=\"Atividade em laboratório\"}\n\n- Rode este o trecho de código acima algumas vezes e observe como se dá a variação amostral.\n- Aumente e diminua o tamanho da amostras e verifique a variação entre as curvas enpíricas e a curva teórica.\n\n:::\n\n\n## Intuição Bayesiana\n\nEm inferência Bayesiana, começamos com crenças sobre os parâmetros (*a priori*) e as atualizamos com dados (*a posteriori*). Para a altura humana ($y$), podemos assumir que a distribuição normal é um bom modelo preditivo. \n\nDeste modo, escrevemos que:\n\n$$y \\sim \\mathcal{N}(\\mu, \\sigma)\n$$ {#eq-normal-alturas}\n\nEm seguida, precisamos sugerir uma dristribuição *a priori* para a média $\\mu$ e o desvio padrão $\\sigma$ que traduzam de forma adequada o que esperamos sobre a distribuição de altura em adultos. Sabemos por exemplo que a média da altura de adultos não é 50 cm nem 300 cm. Qual sua intuição sobre o desvio padrão?\n\n::: {.callout-tip title=\"Atividade em laboratório\"}\n\n1. Assumindo que a distribuição de alturas em adultos segue uma dsitribuição normal **proponha valores razoáveis** para a média ($\\mu$) e o desvio padrão ($\\sigma$).\n2. Para ajudar a decidir sobre o que seriam valores valores razoáveis, plote as curvas de densidade de probabilidade resultante de sua escolha e faça algumas simulações para verificar quais valores estremos sua escolha é capaz de gerar, utilizando os códigos da @sec-amostra-normal.\n\n:::\n\n### Checagem Priori Preditiva\n\nAssumindo que a altura de adultos segue uma distribuição (@eq-normal-alturas), vamos assumir que o parâmetro $\\mu$ segue também uma distribuição normal e que $\\sigma$ segue uma distribuição *log-normal*\n\nComo utilizamos estes pressupostos para escolher distribuição razoiáveis para $\\mu$ e $\\sigma$?\n\n**Priori para $\\mu$**\n\n::: {#6c54b881 .cell execution_count=6}\n``` {.python .cell-code}\nmean_prior_mu =  # INSIRA SUA ESCOLHA PARA A MÉDIA DA PRIORI DE mu\nsd_prior_mu =  # INSIRA SUA ESCOLHA PARA O DESVIO PADRÃO DA PRIORI DE mu\n\n# Gere sequancia de x e calcule a PDF\nxmean_prior = np.linspace(mean_prior_mu - 4*sd_prior_mu, mean_prior_mu + 4*sd_prior_mu, 1000)\npdf_mean_prior = stats.norm.pdf(x = xmean_prior, loc = mean_prior_mu, scale = sd_prior_mu)\n\n# Plote os resultados\nplt.plot(xmean_prior, pdf_mean_prior)\nplt.title(f'Priori para $\\mu$')\nplt.show()\n```\n:::\n\n\n**Priori para $\\sigma$**\n\n::: {#224e1a34 .cell execution_count=7}\n``` {.python .cell-code}\nlmean_prior_sigma =  # INSIRA SUA ESCOLHA PARA A MÉDIA DA PRIORI DE sigma\nlsd_prior_sigma =  # INSIRA SUA ESCOLHA PARA O DESVIO PADRÃO DA PRIORI DE sigma\n\nxsd_prior = np.linspace(0.01, 20, 1000)\npdf_sd_prior = stats.lognorm.pdf(xsd_prior, s=lsd_prior_sigma, scale=lmean_prior_sigma)\n\nplt.plot(xsd_prior, pdf_sd_prior)\nplt.title(f'Priori para $\\sigma$')\nplt.show()\n```\n:::\n\n\n**Extraindo distribuição a priori preditiva de $y$ no PyMC**\n\n::: {#fce69349 .cell execution_count=8}\n``` {.python .cell-code}\n# Definindo o modelo APENAS com as priores compartilhadas\nwith pm.Model() as prior_predictive_model:\n    \n    # Priori para a média\n    mu = pm.Normal(\"mu\", mu = mean_prior_mu, sigma = sd_prior_mu)\n\n    # Priori lognormal para o desvio padrão\n    sigma = pm.Lognormal(\"sigma\", mu = np.log(lmean_prior_sigma), sigma = lsd_prior_sigma)\n\n    # Distribuição preditiva de y\n    y_pred = pm.Normal(\"y_pred\", mu = mu, sigma = sigma)\n\n    # Amostras da priori preditiva\n    prior_predictive_samples = pm.sample_prior_predictive(samples=1000)\n\n```\n:::\n\n\nAgora, vamos visualizar a distribuição dessas amostras preditivas a priori:\n\n::: {#fig-predictive-y-prior .cell execution_count=9}\n``` {.python .cell-code}\ny_pred_prior = prior_predictive_samples.prior[\"y_pred\"].values.flatten()\n\nplt.figure(figsize=(10, 6))\nplt.hist(y_pred_prior, color='skyblue', edgecolor='black')\nplt.xlabel('Alturas priori simulada (cm)', fontsize=12)\nplt.ylabel('Densidade', fontsize=12)\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.show()\n```\n:::\n\n\n::: {.callout-tip title=\"Discussão\"}\n\n Olhe para o histograma. As alturas simuladas parecem razoáveis para alturas de adultos? A distribuição faz sentido dada a sua intuição? Se sim, suas priores iniciais eram sensatas. Se não, é importante considerar um ajuste de suas priores (ex: tornar a priori de $\\sigma$ mais restrita se a dispersão for muito grande, ou ajustar a localização/escala da priori de $\\mu$).\n\n:::\n\n**Checagem priori preditiva com PyMC**\n\nPodemos chegar não somente a distribuição preditiva de $y$, mas também dos parâmetros $\\mu$ e $\\sigma$ usando o PyMC.\nAlém disso, poderíamos testar outras distribuições a priori para algum dos parâmetros, por exemplo sigma. Teste cada uma destas e verifique os efeitos sobre as distribuições preditivas.\n\n::: {#b738a691 .cell execution_count=10}\n``` {.python .cell-code}\n# Definindo o modelo APENAS com as priores compartilhadas\nwith pm.Model() as prior_predictive_model:\n    \n    # Priori para a média\n    mu = pm.Normal(\"mu\", mu=175, sigma=10)\n\n    # Escolha uma das prioris para sigma:\n    sigma = pm.Lognormal(\"sigma\", mu=np.log(0.08), sigma=0.5)\n    # sigma = pm.InverseGamma(\"sigma\", alpha=8, beta=0.9)\n    # sigma = pm.HalfNormal(\"sigma\", sigma=0.1)\n    # sigma = pm.HalfCauchy(\"sigma\", beta=0.1)\n    # sigma = pm.Exponential(\"sigma\", lam=20)\n    # sigma = pm.TruncatedNormal(\"sigma\", mu=0.08, sigma=0.02, lower=0)\n    # sigma = pm.Uniform(\"sigma\", lower=0, upper=1)\n\n    # Distribuição preditiva de y\n    y_pred = pm.Normal(\"y_pred\", mu=mu, sigma=sigma)\n\n    # Amostras da priori preditiva\n    prior_predictive_samples = pm.sample_prior_predictive(samples=1000)\n```\n:::\n\n\n::: {#fig-predictive-priors .cell execution_count=11}\n``` {.python .cell-code}\nmu_pred_prior = prior_predictive_samples.prior[\"mu\"].values.flatten()\nsigma_pred_prior = prior_predictive_samples.prior[\"sigma\"].values.flatten()\ny_pred_prior = prior_predictive_samples.prior[\"y_pred\"].values.flatten()\n\nfig, axes = plt.subplots(1, 3, figsize=(9, 3))\n\naxes[0].hist(mu_pred_prior, bins=30, color='skyblue', edgecolor='black')\naxes[0].set_xlabel(\"μ\")\naxes[0].set_ylabel(\"Frequência\")\n\naxes[1].hist(sigma_pred_prior, bins=30, color='lightgreen', edgecolor='black')\naxes[1].set_xlabel(\"σ\")\naxes[1].set_ylabel(\"Frequência\")\n\naxes[2].hist(y_pred_prior, bins=30, color='salmon', edgecolor='black')\naxes[2].set_xlabel(\"alturas (y)\")\naxes[2].set_ylabel(\"Frequência\")\n\nplt.tight_layout()\nplt.show()\n```\n:::\n\n\n",
    "supporting": [
      "modelo_normal_bayesiano_priori_files"
    ],
    "filters": [],
    "includes": {}
  }
}